class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            PracticejetTheme {

                animate()
            }
        }
    }
}

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun animate() {

    val circleoffset = remember {
        androidx.compose.animation.core.Animatable(0f)
    }
    val scope = rememberCoroutineScope()

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {

        Box(
            modifier = Modifier
                .height(100.dp)
                .fillMaxWidth()
        )
        {
            Card(onClick = { }, colors = CardDefaults.cardColors(Color.Red)) {

                Box(modifier = Modifier.fillMaxSize())
                {

                    Box(modifier = Modifier
                        .offset(x = circleoffset.value.dp)
                        .size(50.dp)
                        .background(Color.Gray, CircleShape))
                }

            }
        }

        Spacer(modifier = Modifier.height(30.dp))
        Button(onClick = {
            scope.launch {
             circleoffset.animateTo(
                   targetValue = 250f,
                   animationSpec = tween(durationMillis = 1000)
               )

                /*circleoffset.animateTo(
                    targetValue = 300f,
                    keyframes {
                        durationMillis = 1000
                        0f at 0 with LinearOutSlowInEasing
                        0.5f at 500 with FastOutLinearInEasing
                        1f  at 1
                    }
                )*/

            }
        }) {

            Text(text = "Move Circle")
        }


    }
}
